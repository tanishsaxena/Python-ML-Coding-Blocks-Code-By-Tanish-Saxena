import cv2
import numpy as np
from os import path

name = input("Enter your name : ")
cap = cv2.VideoCapture(0)

classifier = cv2.CascadeClassifier("haarcascade_frontalface.xml")

count = 50  # Provided a counter upto which it will load the image against the name

face_list = []  # It will take the list of image for a single name , it takes 100 X 100 size image
#  and we flatten it to make 10000 value image and it will store it in face_list

while True:
    ret, frame = cap.read()

    gray = cv2.cvtColor(frame, cv2.COLOR_RGB2GRAY)

    faces = classifier.detectMultiScale(gray)

    areas = []

    for face in faces:
        x, y, w, h = face  # face have 4 attributes x,y,w,h and we are unpacking these tuples
        area = w * h
        areas.append((area, face))
    areas = sorted(areas, reverse=True)

    if len(areas) > 0:
        face = areas[0][1]
        x, y, w, h = face

        cv2.rectangle(gray, (x, y), (x + w, y + h), (255, 255, 0), 2)

        face_img = gray[y:y + h, x:x + w]

        face_img = cv2.resize(face_img, (100, 100))



        face_list.append(face_img.flatten())

        count -= 1

        print("Loaded", 50 - count)  # It will load 50 images after getting name

        if count <= 0:
            break

    # shape=gray.shape
    # small=cv2.resize(gray,(200,200))
    # big=cv2.resize(small,(shape[1],shape[0])) #This is done coz it takes x and y in reverse order

    # cv2.imshow("video",big)

    cv2.imshow("video", gray)
    if cv2.waitKey(1) > 30:
        break

face_list = np.array(face_list)
print(face_list.shape)
name_list = np.full((len(face_list), 1), name)
total = np.hstack([name_list, face_list])

if path.exists('faces.npy'):
    data = np.load('faces.npy')
    data = np.vstack([data, total])
else:
    data = total

np.save('faces.npy', data)

cap.release()
cv2.destroyAllWindows()
